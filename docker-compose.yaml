version: '3'
services:
  localstack:
    image: localstack/localstack:0.14.0
    environment:
      - EDGE_PORT=80
      - DATA_DIR=/tmp/localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SKIP_SSL_CERT_DOWNLOAD=1
    labels:
      - "virtual.host=*.eu-west-1.amazonaws.com *.dualstack.eu-west-1.amazonaws.com *.s3.eu-west-1.amazonaws.com *.s3.dualstack.eu-west-1.amazonaws.com *.amazonaws.com *.s3.amazonaws.test *.amazonaws.test amazonaws.test"
      - "virtual.tls=internal"
    volumes:
      - "${LOCALSTACK_DATA_DIR-/private/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "awslocal", "s3", "ls"]
      interval: 5s
    networks:
      internal: {}

  proxy:
    image: mitmproxy/mitmproxy:7.0.4
    command:
      - "mitmweb"
      - "--ssl-insecure"
      - "--web-host"
      - "0.0.0.0"
      - "--no-web-open-browser"
      - "-p"
      - "8888"
      - "--web-port"
      - "8082"
    dns:
      - 10.5.0.100
    ports:
      - "8888:8888"
      - "8082:8082"
    volumes:
      - "mitmproxy:/home/mitmproxy/.mitmproxy/"
    networks:
      default: {}
      internal:
        ipv4_address: 10.5.0.101

  api-gateway:
    image: caddy:2.4.6
    command: caddy run --watch --config /etc/caddy/Caddyfile
    dns:
      - 10.5.0.100
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy-conf:/etc/caddy:ro
      - caddy-data:/data/caddy
    labels:
      - "docker-gen.target"
    networks:
      default: {}
      internal: {}

  dockergen:
    image: nginxproxy/docker-gen:0.8.4
    command: -watch /etc/docker-gen/templates/caddy.tmpl /etc/caddy/Caddyfile
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./caddy/Caddyfile.tmpl:/etc/docker-gen/templates/caddy.tmpl
      - caddy-conf:/etc/caddy

  dns-internal:
    image: coredns/coredns:1.7.0
    volumes:
      - ./dns/Corefile.internal:/Corefile
    networks:
      internal:
        ipv4_address: 10.5.0.100
      default: {}

  dns-external:
    image: coredns/coredns:1.7.0
    volumes:
      - ./dns/Corefile.external:/Corefile
    ports:
      - "127.0.0.1:53:53/tcp"
      - "127.0.0.1:53:53/udp"
    networks:
      - default

  cert-helper:
    build: cert-helper
    volumes:
      - "mitmproxy:/mitmproxy:ro"
      - "caddy-data:/caddy:ro"
      - "certificates:/tmp/certs"
    healthcheck:
      test: [ "CMD", "ls", "-al", "/tmp/certs/caddy.pem" ]
      interval: 3s
      retries: 5

networks:
  internal:
    internal: true
    ipam:
      config:
        - subnet: 10.5.0.0/16

volumes:
  mitmproxy:
  certificates:
  caddy-conf:
  caddy-data: